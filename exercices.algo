//exercice 1
ALGORITHM intervals_overlap
VAR
    intrs : ARRAY_OF type[20][2]; 
    lastTime, i, N : INTEGER;
    count : ARRAY_OF INTEGER[100];
    sum : INTEGER := value;
    isIntersect : BOOLEAN := FALSE;
BEGIN
    
    lastTime := -1;
    FOR i FROM 0 TO N-1 DO
        IF (lastTime < intrs[i][1]) THEN   
            lastTime :=  intrs[i][1];
        END_IF
    END_FOR

    
    count.length := lastTime +1;

    FOR i FROM 0 TO N-1 DO
        count[intrs[i][0]] := count[intrs[i][0]] + 1; 
        count[intrs[i][1]] := count[intrs[i][1]] - 1; 
    END_FOR



    
    

    FOR i FROM 0 TO count.length -1 DO
        sum := sum + count[i];
        IF (sum > 1) THEN
            isIntersect := TRUE;
            BREAK;
        END_IF
    END_FOR

    IF (isIntersect) THEN
        Write("Intervals are overlapping");
    ELSE
        Write("No intervals overlap");
    END_IF


END

// exercice 2

